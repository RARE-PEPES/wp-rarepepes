{"version":3,"sources":["main.js"],"names":["let","nftData","assetNamesOnPage","document","querySelectorAll","map","link","dataset","assetName","fetch","then","response","json","data","forEach","item","includes","asset_name","Image","src","img_url","catch","error","console","addEventListener","links","mouseX","event","clientX","mouseY","clientY","activeTooltip","querySelector","style","top","offsetHeight","left","offsetWidth","tooltip","createElement","className","body","appendChild","assetData","find","innerHTML","series","order","quantity","display","classList","add","remove"],"mappings":"AAAAA,IAAAC,QACAC,iBAAA,CAAA,GAAAC,SAAAC,iBAAA,UAAA,GAAAC,IAAAC,GAAAA,EAAAC,QAAAC,SAAA,EAEAC,MAAA,sCAAA,EACAC,KAAAC,GAAAA,EAAAC,KAAA,CAAA,EACAF,KAAAG,KACAZ,QAAAY,EAAAA,MAGAC,QAAAC,IACAb,iBAAAc,SAAAD,EAAAE,UAAA,KACA,IAAAC,OACAC,IAAAJ,EAAAK,QAEA,CAAA,CAEA,CAAA,EACAC,MAAAC,IACAC,QAAAD,MAAA,uBAAAA,CAAA,CACA,CAAA,EAEAnB,SAAAqB,iBAAA,mBAAA,IACA,IAAAC,EAAAtB,SAAAC,iBAAA,UAAA,EACAqB,IAIAtB,SAAAqB,iBAAA,YAAA,IACAxB,IAAA0B,EAAAC,EAAAC,QACAC,EAAAF,EAAAG,QACAC,EAAA5B,SAAA6B,cAAA,oBAAA,EACAD,IACAA,EAAAE,MAAAC,IAAAL,GAAAE,EAAAI,aAAA,IAAA,KACAJ,EAAAE,MAAAG,KAAAV,EAAAK,EAAAM,YAAA,EAAA,KAEA,CAAA,EAEAZ,EAAAX,QAAA,IACA,MAAAN,EAAAF,EAAAC,QAAAC,UAEA8B,EAAAnC,SAAAoC,cAAA,KAAA,EACAD,EAAAE,UAAA,aACArC,SAAAsC,KAAAC,YAAAJ,CAAA,EAEAhC,EAAAkB,iBAAA,YAAA,IACA,IAOAmB,EAPA1C,SAOA0C,EAAA1C,QAAA2C,KAAA7B,GAAAA,EAAAE,aAAAT,CAAA,EAIA8B,EAAAO,UAHAF;0BAIAA,EAAA1B;wCACA0B,EAAAG,gCAAAH,EAAAI;gDACAJ,EAAAvB,iBAAAuB,EAAA1B;mDACA0B,EAAAK;kBANA,iCARAV,EAAAO,UAAA,0BACAP,EAAAL,MAAAgB,QAAA,QACAX,EAAAY,UAAAC,IAAA,QAAA,CAiBA,CAAA,EAEA7C,EAAAkB,iBAAA,WAAA,IACAc,EAAAL,MAAAgB,QAAA,OACAX,EAAAY,UAAAE,OAAA,QAAA,CACA,CAAA,CACA,CAAA,EACA,CAAA","file":"main.min.js","sourcesContent":["let nftData;\nlet assetNamesOnPage = [...document.querySelectorAll('.rs-link')].map(link => link.dataset.assetName);\n\nfetch('https://data.rarepepes.com/items/nft')\n    .then(response => response.json())\n    .then(data => {\n        nftData = data.data;\n\n        // Preload images for assets present on the page\n        nftData.forEach(item => {\n            if (assetNamesOnPage.includes(item.asset_name)) {\n                const img = new Image();\n                img.src = item.img_url;\n            }\n        });\n        \n    })\n    .catch(error => {\n        console.error(\"Error fetching data:\", error);\n    });\n\ndocument.addEventListener('DOMContentLoaded', (event) => {\n    const links = document.querySelectorAll('.rs-link');\n    if (!links) {\n        return;\n    }\n\n    document.addEventListener('mousemove', (event) => {\n        let mouseX = event.clientX;\n        let mouseY = event.clientY;\n        const activeTooltip = document.querySelector('.rs-tooltip.active');\n        if (activeTooltip) {\n            activeTooltip.style.top = `${mouseY - (activeTooltip.offsetHeight + 10)}px`;\n            activeTooltip.style.left = `${mouseX - (activeTooltip.offsetWidth / 2)}px`;\n        }\n    });\n\n    links.forEach((link) => {\n        const assetName = link.dataset.assetName;\n\n        const tooltip = document.createElement('div');\n        tooltip.className = 'rs-tooltip';\n        document.body.appendChild(tooltip);\n\n        link.addEventListener('mouseover', (event) => {\n            if (!nftData) {\n                tooltip.innerHTML = 'Data is not loaded yet.';\n                tooltip.style.display = 'block';\n                tooltip.classList.add('active');\n                return;\n            }\n\n            const assetData = nftData.find(item => item.asset_name === assetName);\n            if (!assetData) {\n                tooltip.innerHTML = 'No data found for this asset.';\n            } else {\n                tooltip.innerHTML = `\n                    <h3>${assetData.asset_name}</h3>\n                    <p>Series <strong>${assetData.series}</strong> Card <strong>${assetData.order}</strong></p>\n                    <img class=\"fade-in\" src=\"${assetData.img_url}\" alt=\"${assetData.asset_name}\" />\n                    <p>Initially Issued: <strong>${assetData.quantity}</strong></p>\n                `;\n            }\n            tooltip.style.display = 'block';\n            tooltip.classList.add('active');\n        });\n\n        link.addEventListener('mouseout', (event) => {\n            tooltip.style.display = 'none';\n            tooltip.classList.remove('active');\n        });\n    });\n});\n"]}