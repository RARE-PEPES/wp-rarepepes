{"version":3,"sources":["main.js"],"names":["document","addEventListener","links","querySelectorAll","let","mouseX","event","clientX","mouseY","clientY","activeTooltip","querySelector","style","top","offsetHeight","left","offsetWidth","forEach","assetName","link","dataset","tooltip","createElement","className","body","appendChild","fetch","then","response","json","data","assetData","find","item","asset_name","innerHTML","series","order","img_url","quantity","display","classList","add","remove"],"mappings":"AAAAA,SAAAC,iBAAA,mBAAA,IACA,IAAAC,EAAAF,SAAAG,iBAAA,UAAA,EACAD,IAIAF,SAAAC,iBAAA,YAAA,IACAG,IAAAC,EAAAC,EAAAC,QACAC,EAAAF,EAAAG,QACAC,EAAAV,SAAAW,cAAA,oBAAA,EACAD,IACAA,EAAAE,MAAAC,IAAAL,GAAAE,EAAAI,aAAA,IAAA,KACAJ,EAAAE,MAAAG,KAAAV,EAAAK,EAAAM,YAAA,EAAA,KAEA,CAAA,EAEAd,EAAAe,QAAA,IACA,MAAAC,EAAAC,EAAAC,QAAAF,UAEAG,EAAArB,SAAAsB,cAAA,KAAA,EACAD,EAAAE,UAAA,aACAvB,SAAAwB,KAAAC,YAAAJ,CAAA,EAEAF,EAAAlB,iBAAA,YAAA,IAGAyB,MAAA,sCAAA,EACAC,KAAAC,GAAAA,EAAAC,KAAA,CAAA,EACAF,KAAAG,IACAC,EAAAD,EAAAA,KAAAE,KAAAC,GAAAA,EAAAC,aAAAhB,CAAA,EAIAG,EAAAc,UAHAJ;kCAIAA,EAAAG;gDACAH,EAAAK,gCAAAL,EAAAM;wCACAN,EAAAO,iBAAAP,EAAAG;2DACAH,EAAAQ;0BANA,gCASAlB,EAAAT,MAAA4B,QAAA,QACAnB,EAAAoB,UAAAC,IAAA,QAAA,CACA,CAAA,CACA,CAAA,EAEAvB,EAAAlB,iBAAA,WAAA,IACAoB,EAAAT,MAAA4B,QAAA,OACAnB,EAAAoB,UAAAE,OAAA,QAAA,CACA,CAAA,CACA,CAAA,EACA,CAAA","file":"main.min.js","sourcesContent":["document.addEventListener('DOMContentLoaded', (event) => {\n    const links = document.querySelectorAll('.rs-link');\n    if (!links) {\n        return;\n    }\n\n    document.addEventListener('mousemove', (event) => {\n        let mouseX = event.clientX;\n        let mouseY = event.clientY;\n        const activeTooltip = document.querySelector('.rs-tooltip.active');\n        if (activeTooltip) {\n            activeTooltip.style.top = `${mouseY - (activeTooltip.offsetHeight + 10)}px`;\n            activeTooltip.style.left = `${mouseX - (activeTooltip.offsetWidth / 2)}px`;\n        }\n    });\n\n    links.forEach((link) => {\n        const assetName = link.dataset.assetName;\n\n        const tooltip = document.createElement('div');\n        tooltip.className = 'rs-tooltip';\n        document.body.appendChild(tooltip);\n\n        link.addEventListener('mouseover', (event) => {\n            // checkPositionAndDisplayTooltip(tooltip, link);\n\n            fetch('https://data.rarepepes.com/items/nft')\n                .then(response => response.json())\n                .then(data => {\n                    const assetData = data.data.find(item => item.asset_name === assetName);\n                    if (!assetData) {\n                        tooltip.innerHTML = 'No data found for this asset.';\n                    } else {\n                        tooltip.innerHTML = `\n                            <h3>${assetData.asset_name}</h3>\n                            <p>Series <strong>${assetData.series}</strong> Card <strong>${assetData.order}</strong></p>\n                            <img src=\"${assetData.img_url}\" alt=\"${assetData.asset_name}\" />\n                            <p>Initially Issued: <strong>${assetData.quantity}</strong></p>\n                        `;\n                    }\n                    tooltip.style.display = 'block';\n                    tooltip.classList.add('active');\n                });\n        });\n\n        link.addEventListener('mouseout', (event) => {\n            tooltip.style.display = 'none';\n            tooltip.classList.remove('active');\n        });\n    });\n});\n"]}